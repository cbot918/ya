SSH-AGENT(1)                           BSD General Commands Manual                           SSH-AGENT(1)

NNAAMMEE
     sssshh--aaggeenntt — OpenSSH authentication agent

SSYYNNOOPPSSIISS
     sssshh--aaggeenntt [--cc | --ss] [--DDdd] [--aa _b_i_n_d___a_d_d_r_e_s_s] [--EE _f_i_n_g_e_r_p_r_i_n_t___h_a_s_h] [--PP _p_r_o_v_i_d_e_r___w_h_i_t_e_l_i_s_t] [--tt _l_i_f_e]
               [_c_o_m_m_a_n_d [_a_r_g _._._.]]
     sssshh--aaggeenntt [--cc | --ss] --kk

DDEESSCCRRIIPPTTIIOONN
     sssshh--aaggeenntt is a program to hold private keys used for public key authentication.  Through use of en‐
     vironment variables the agent can be located and automatically used for authentication when logging
     in to other machines using ssh(1).

     The options are as follows:

     --aa _b_i_n_d___a_d_d_r_e_s_s
             Bind the agent to the UNIX-domain socket _b_i_n_d___a_d_d_r_e_s_s.  The default is
             _$_T_M_P_D_I_R_/_s_s_h_-_X_X_X_X_X_X_X_X_X_X_/_a_g_e_n_t_._<_p_p_i_d_>.

     --cc      Generate C-shell commands on stdout.  This is the default if SHELL looks like it's a csh
             style of shell.

     --DD      Foreground mode.  When this option is specified sssshh--aaggeenntt will not fork.

     --dd      Debug mode.  When this option is specified sssshh--aaggeenntt will not fork and will write debug in‐
             formation to standard error.

     --EE _f_i_n_g_e_r_p_r_i_n_t___h_a_s_h
             Specifies the hash algorithm used when displaying key fingerprints.  Valid options are:
             “md5” and “sha256”.  The default is “sha256”.

     --kk      Kill the current agent (given by the SSH_AGENT_PID environment variable).

     --PP _p_r_o_v_i_d_e_r___w_h_i_t_e_l_i_s_t
             Specify a pattern-list of acceptable paths for PKCS#11 and FIDO authenticator shared li‐
             braries that may be used with the --SS or --ss options to ssh-add(1).  Libraries that do not
             match the whitelist will be refused.  See PATTERNS in ssh_config(5) for a description of
             pattern-list syntax.  The default whitelist is “/usr/lib/*,/usr/local/lib/*”.

     --ss      Generate Bourne shell commands on stdout.  This is the default if SHELL does not look like
             it's a csh style of shell.

     --tt _l_i_f_e
             Set a default value for the maximum lifetime of identities added to the agent.  The lifetime
             may be specified in seconds or in a time format specified in sshd_config(5).  A lifetime
             specified for an identity with ssh-add(1) overrides this value.  Without this option the de‐
             fault maximum lifetime is forever.

     _c_o_m_m_a_n_d [_a_r_g _._._.]
             If a command (and optional arguments) is given, this is executed as a subprocess of the
             agent.  The agent exits automatically when the command given on the command line terminates.

     There are two main ways to get an agent set up.  The first is at the start of an X session, where
     all other windows or programs are started as children of the sssshh--aaggeenntt program.  The agent starts a
     command under which its environment variables are exported, for example sssshh--aaggeenntt xxtteerrmm &&.  When the
     command terminates, so does the agent.

     The second method is used for a login session.  When sssshh--aaggeenntt is started, it prints the shell com‐
     mands required to set its environment variables, which in turn can be evaluated in the calling
     shell, for example eevvaall ``sssshh--aaggeenntt --ss``.

     In both cases, ssh(1) looks at these environment variables and uses them to establish a connection
     to the agent.

     The agent initially does not have any private keys.  Keys are added using ssh-add(1) or by ssh(1)
     when AAddddKKeeyyssTTooAAggeenntt is set in ssh_config(5).  Multiple identities may be stored in sssshh--aaggeenntt concur‐
     rently and ssh(1) will automatically use them if present.  ssh-add(1) is also used to remove keys
     from sssshh--aaggeenntt and to query the keys that are held in one.

     Connections to sssshh--aaggeenntt may be forwarded from further remote hosts using the --AA option to ssh(1)
     (but see the caveats documented therein), avoiding the need for authentication data to be stored on
     other machines.  Authentication passphrases and private keys never go over the network: the connec‐
     tion to the agent is forwarded over SSH remote connections and the result is returned to the re‐
     quester, allowing the user access to their identities anywhere in the network in a secure fashion.

EENNVVIIRROONNMMEENNTT
     SSH_AGENT_PID  When sssshh--aaggeenntt starts, it stores the name of the agent's process ID (PID) in this
                    variable.

     SSH_AUTH_SOCK  When sssshh--aaggeenntt starts, it creates a UNIX-domain socket and stores its pathname in
                    this variable.  It is accessible only to the current user, but is easily abused by
                    root or another instance of the same user.

     In Debian, sssshh--aaggeenntt is installed with the set-group-id bit set, to prevent ptrace(2) attacks re‐
     trieving private key material.  This has the side-effect of causing the run-time linker to remove
     certain environment variables which might have security implications for set-id programs, including
     LD_PRELOAD, LD_LIBRARY_PATH, and TMPDIR.  If you need to set any of these environment variables, you
     will need to do so in the program executed by ssh-agent.

FFIILLEESS
     $TMPDIR/ssh-XXXXXXXXXX/agent.<ppid>
             UNIX-domain sockets used to contain the connection to the authentication agent.  These sock‐
             ets should only be readable by the owner.  The sockets should get automatically removed when
             the agent exits.

SSEEEE AALLSSOO
     ssh(1), ssh-add(1), ssh-keygen(1), ssh_config(5), sshd(8)

AAUUTTHHOORRSS
     OpenSSH is a derivative of the original and free ssh 1.2.12 release by Tatu Ylonen.  Aaron Campbell,
     Bob Beck, Markus Friedl, Niels Provos, Theo de Raadt and Dug Song removed many bugs, re-added newer
     features and created OpenSSH.  Markus Friedl contributed the support for SSH protocol versions 1.5
     and 2.0.

BSD                                         December 21, 2019                                         BSD
